# Configuration file for britney

# Paths for control files
UNSTABLE          = /srv/archive.tanglu.org/tanglu/dists/staging
TESTING           = /srv/archive.tanglu.org/tanglu/dists/dasyatis

COMPONENTS = main, contrib, non-free

# Output
NONINST_STATUS    = var/data/dasyatis/non-installable-status
EXCUSES_OUTPUT    = var/output/dasyatis/excuses.html
EXCUSES_YAML_OUTPUT = var/output/dasyatis/excuses.yaml
UPGRADE_OUTPUT    = var/output/dasyatis/output.txt
HEIDI_OUTPUT      = var/output/dasyatis/HeidiResult

# External policy/constraints/faux-packages information that
# (presumably) rarely changes.  Examples include "constraints".
STATIC_INPUT_DIR = var/input
HINTSDIR = var/input

# Directory for input files that Britney will update herself
# (e.g. aging information) or will need regular updates
# (e.g. urgency information).
STATE_DIR          = var/state

# List of release architectures
ARCHITECTURES     = amd64 i386

# if you're not in this list, arch: all packages are allowed to break on you
NOBREAKALL_ARCHES = amd64 i386

# if you're in this list, your packages may not stay in sync with the source
OUTOFSYNC_ARCHES  =
FUCKED_ARCHES     =

# if you're in this list, your uninstallability count may increase
BREAK_ARCHES      =

# if you're in this list, you are a new architecture
NEW_ARCHES        =

# priorities and delays
MINDAYS_LOW       = 1
MINDAYS_MEDIUM    = 0
MINDAYS_HIGH      = 0
MINDAYS_CRITICAL  = 0
MINDAYS_EMERGENCY = 0

DEFAULT_URGENCY   = medium

# hint permissions
HINTS_JANITOR       = ALL
HINTS_MAK           = ALL
HINTS_YOFEL         = ALL
HINTS_SHADESLAYER   = ALL
HINTS_JONNO         = ALL
HINTS_NOSKCAJ       = ALL

# support for old libraries in testing (smooth update)
# use ALL to enable smooth updates for all the sections
#
# naming a non-existent section will effectively disable new smooth
# updates but still allow removals to occur
SMOOTH_UPDATES    = libs oldlibs

IGNORE_CRUFT      = 1

# Disabled stuff from the ADT-aware Britney
#ADT_ENABLE        = no
#ADT_DEBUG         = no
#ADT_ARCHES        = amd64 i386
## comment this to disable autopkgtest requests
##ADT_AMQP          = amqp://user:pwd@amqp.example.com
## Swift base URL with the results (must be publicly readable and browsable)
##ADT_SWIFT_URL     = https://objectstorage.mycloud.example.com/v1/AUTH_autopkgtest
#
#BOOTTEST_ENABLE   = no
#BOOTTEST_DEBUG    = yes
#BOOTTEST_ARCHES   = armhf amd64
#BOOTTEST_FETCH    = yes
